package org.example;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.json.JSONArray;
import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

public class test {

    public static void main(String[] args) {
        try {
            // B∆∞·ªõc 1: Load HTML trang s·∫£n ph·∫©m
            String pageUrl = "https://cellphones.com.vn/dien-thoai-xiaomi-redmi-a3.html";
            Document doc = Jsoup.connect(pageUrl)
                    .userAgent("Mozilla/5.0")
                    .get();

            // B∆∞·ªõc 2: L·∫•y product-id t·ª´ div
            Element commentDiv = doc.select("div#block-comment-cps").first();
            if (commentDiv == null) {
                System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y ph·∫ßn b√¨nh lu·∫≠n trong HTML.");
                return;
            }

            String productId = commentDiv.attr("product-id");
            System.out.println("‚û°Ô∏è T√¨m th·∫•y product-id: " + productId);

            // B∆∞·ªõc 3: G·ªçi API ƒë·ªÉ l·∫•y comment
            String apiUrl = "https://cellphones.com.vn/index.php/rest/V1/cms-comment/product/" + productId;

            HttpURLConnection conn = (HttpURLConnection) new URL(apiUrl).openConnection();
            conn.setRequestProperty("User-Agent", "Mozilla/5.0");
            conn.setRequestProperty("Accept", "application/json");

            int responseCode = conn.getResponseCode();

            if (responseCode == 200) {
                // OK - ƒë·ªçc JSON
                BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
                StringBuilder jsonBuilder = new StringBuilder();
                String line;
                while ((line = reader.readLine()) != null) {
                    jsonBuilder.append(line);
                }
                reader.close();

                // B∆∞·ªõc 4: Parse JSON comment
                JSONArray comments = new JSONArray(jsonBuilder.toString());

                if (comments.isEmpty()) {
                    System.out.println("‚ö†Ô∏è S·∫£n ph·∫©m kh√¥ng c√≥ b√¨nh lu·∫≠n n√†o.");
                } else {
                    for (int i = 0; i < comments.length(); i++) {
                        JSONObject comment = comments.getJSONObject(i);
                        String name = comment.optString("customer_name", "·∫®n danh");
                        String content = comment.optString("question_content", "");
                        String answer = comment.optString("answer_content", "");

                        System.out.println("üë§ " + name);
                        System.out.println("‚ùì " + content);
                        if (!answer.isEmpty()) {
                            System.out.println("‚úÖ Tr·∫£ l·ªùi: " + answer);
                        }
                        System.out.println("-----------------------------");
                    }
                }

            } else if (responseCode == 404) {
                System.out.println("‚ö†Ô∏è API tr·∫£ v·ªÅ 404 - Kh√¥ng c√≥ d·ªØ li·ªáu comment cho s·∫£n ph·∫©m.");
            } else {
                System.out.println("‚ö†Ô∏è L·ªói khi g·ªçi API. HTTP status: " + responseCode);
            }

        } catch (Exception e) {
            System.out.println("‚ùå ƒê√£ x·∫£y ra l·ªói:");
            e.printStackTrace();
        }
    }
}
